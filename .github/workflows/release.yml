name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            asset_name: gbc-linux-amd64
          - os: macos-latest
            asset_name: gbc-macos-amd64
          - os: windows-latest
            asset_name: gbc-windows-amd64.exe

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.24.2'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.14'

      - name: Install jq
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            choco install jq -y
          elif [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            sudo apt-get update
            sudo apt-get install -y jq
          else
            brew install jq
          fi

      - name: Install WebView2 Runtime (Windows)
        if: matrix.os == 'windows-latest'
        run: choco install webview2-runtime -y

      - name: Get project name
        run: |
          PROJECT_NAME=$(jq -r '.name' wails.json)
          echo "PROJECT_NAME=$PROJECT_NAME" >> $GITHUB_ENV
          echo "Project name: $PROJECT_NAME"
        shell: bash

      - name: Install dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libglib2.0-dev
          export PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/lib/pkgconfig:/usr/share/pkgconfig
          pkg-config --list-all | grep webkit || echo "Webkit not found"

      - name: Install dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install pkg-config webkit2gtk

      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@v2.10

      - name: Build with Wails
        run: |
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            export PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/lib/pkgconfig:/usr/share/pkgconfig
            wails build -platform linux/amd64
          else
            wails build
          fi
        shell: bash

      - name: Debug Build Output
        run: |
          echo "Current directory:"
          pwd
          echo "Listing all files in current directory:"
          ls -la
          echo "Listing build directories:"
          find build -type d
          echo "Listing all build artifacts:"
          find build -type f
          echo "Contents of build/bin:"
          ls -la build/bin || echo "build/bin directory not found"
          echo "Contents of build:"
          ls -la build || echo "build directory not found"
        shell: bash

      - name: Create Release
        if: matrix.os == 'ubuntu-latest'
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set file path
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            echo "FILE_PATH=build/bin/${{ env.PROJECT_NAME }}.exe" >> $GITHUB_ENV
          else
            echo "FILE_PATH=build/bin/${{ env.PROJECT_NAME }}" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Upload artifacts to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.FILE_PATH }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}
